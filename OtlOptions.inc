///<summary>Common compilation settings and conditional defines for the OmniThreadLibrary project.</summary>
///<author>Primoz Gabrijelcic</author>
///<license>
///This software is distributed under the BSD license.
///
///Copyright (c) 2010 Primoz Gabrijelcic
///All rights reserved.
///
///Redistribution and use in source and binary forms, with or without modification,
///are permitted provided that the following conditions are met:
///- Redistributions of source code must retain the above copyright notice, this
///  list of conditions and the following disclaimer.
///- Redistributions in binary form must reproduce the above copyright notice,
///  this list of conditions and the following disclaimer in the documentation
///  and/or other materials provided with the distribution.
///- The name of the Primoz Gabrijelcic may not be used to endorse or promote
///  products derived from this software without specific prior written permission.
///
///THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
///ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
///WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
///DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
///ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
///(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
///LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
///ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
///(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
///SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///</license>
///<remarks><para>
///   Author            : Primoz Gabrijelcic
///   Creation date     : 2010-07-01
///   Last modification : 2012-09-23
///   Version           : 1.04
///</para><para>
///   History:
///     1.04: 2012-09-23
///       - Introduced OTL_HasSystemTypes and OTL_LongGetMethodInfo.
///     1.03: 2011-07-23
///       - Assertions must be always enabled.
///     1.02: 2010-12-02
///       - Removed OTL_ParallelAggregate.
///     1.01: 2010-07-25
///       - Introduced OTL_ParallelAggregate.
///     1.0: 2010-07-01
///       - Released.
///</para></remarks>

// See the Configuration block below to configure your build process.

{$ALIGN 8}
{$BOOLEVAL OFF}
{$EXTENDEDSYNTAX ON}
{$LONGSTRINGS ON}
{$MINENUMSIZE 1}
{$OPENSTRINGS ON}
{$OVERFLOWCHECKS OFF}
{$TYPEDADDRESS OFF}
{$ASSERTIONS ON}
{$TYPEINFO OFF}

{$IF CompilerVersion >= 26}{$LEGACYIFEND ON}{$IFEND}

{$IF CompilerVersion < 19} //D2007
  {$DEFINE OTL_NeedsWindowsAPIs}
{$IFEND}

{$IF CompilerVersion >= 20} //D2009
  {$DEFINE OTL_Anonymous}
  {$DEFINE OTL_Generics}
  {$DEFINE OTL_HasInterlockedCompareExchangePointer}
{$IFEND}

{$IF CompilerVersion <= 21} //D2010
  {$DEFINE OTL_LimitedGenerics}
{$IFEND}

{$IF CompilerVersion >= 21} //D2010
  {$DEFINE OTL_ERTTI}
  {$DEFINE OTL_DeprecatedResume}
  {$DEFINE OTL_KnowsParamCount}
  {$DEFINE OTL_HasTkPointer}
  {$DEFINE OTL_HasArrayOfT}
{$IFEND}

{$IF CompilerVersion >= 22} //DXE
  {$DEFINE OTL_TOmniValueImplicitDateTime}
{$IFEND}

{$IF CompilerVersion >= 23} //DXE2
  {$DEFINE OTL_Supports64Bit}
  {$DEFINE OTL_HasSystemTypes}
{$IFEND}

{$IF CompilerVersion >= 24} //DXE3
  {$DEFINE OTL_LongGetMethodInfo}
{$IFEND}

{$IF CompilerVersion >= 26} //DXE5
  {$DEFINE OTL_StrPasInAnsiStrings}
{$IFEND}

{$IFDEF ConditionalExpressions}
  {$IF CompilerVersion >= 17} //D2005+
    {$DEFINE USE_STRICT}
  {$IFEND}
  {$IF CompilerVersion >= 18} //D2006+
    {$DEFINE OmniAlignedInt}
  {$IFEND}
{$ENDIF}

// -----------------------------------------------------------------------------
// --------------- CONFIGURATION BLOCK -----------------------------------------
// -----------------------------------------------------------------------------
// INSTRUCTIONS:
//   You can control parameters to your build process either by editing this file,
//  or by leaving all the configuration block conditionals undefined in this file
//  and controlling them instead in the project options. The latter approach is
//  better if you want config-specific settings.
//  If controlling via this file: To turn a parameter ON, change or ensure the
//  respective directive from
//   {.$DEFINE XXX} to {$DEFINE XXX}
//  To turn the parameter OFF, change or ensure it is the other way around.
//
// PARAMETER DESCRIPTION TABLE:
// Conditional                   | Significance                                 |  Default and recommended value
// ..............................+..............................................+................................
//  DEFINE OTL_RELY_ON_ALIGN     | If set, use an $ALIGN/[Volatile] structure   |  OFF (undefined).
//                               |  for atomic integer reads and bus locking    |
//                               |  operations such as Interlocked Compare and  |
//                               |  Exchange. Otherwise use a slack space       |
//                               |  structure, such as TGp4AlignedInt. This     |
//                               |  conditional only has effect for non-windows |
//                               |  platforms and only for compilers XE7+.      |
//                               |  This is an experimental setting with less  |
//                               |  testing. Use at your own risk. If it works  |
//                               |  it is likely to confer an advantage of      |
//                               |  slightly superior performance.              |
//  OTL_CACHE_SLACKSPACE_OFFSETS | If undefined, the TGp4AlignedInt and similar | OFF (undefined).
//                               |  slack-space containers recalculate the slack|
//                               |  space offset on each value access. If set,  |
//                               |  the offset calculation is cached, which     |
//                               |  should give a slightly superior performance.|
//
//
// ACTUATION:

     {.$DEFINE OTL_RELY_ON_ALIGN}
     {.$DEFINE OTL_CACHE_SLACKSPACE_OFFSETS}

// -----------------------------------------------------------------------------
// --------------- END OF CONFIGURATION BLOCK ----------------------------------
// -----------------------------------------------------------------------------





// Post configuration block. Do not change. This section is for computed
//  conditionals that are a function of paremeters in the configuration block.
{$UNDEF OTL_USE_ALIGN}
{$IFNDEF MSWINDOWS}
  {$IF CompilerVersion >= 28} // XE7+
    {$IFDEF OTL_RELY_ON_ALIGN}
      {$DEFINE OTL_USE_ALIGN}
    {$ENDIF}
  {$IFEND}
{$ENDIF}

{$IFDEF CONDITIONALEXPRESSIONS}
  {$IF CompilerVersion >= 24}
    {$DEFINE XE3_OR_ABOVE}
  {$IFEND}
{$ENDIF}
